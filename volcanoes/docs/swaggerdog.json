{     "openapi": "3.0.3",
      "info": {
        "version": "1.0.0",
        "title": "Volcanoes around the world",
        "description": "This API has been created to support the assessment in QUT's CAB230 Web Computing unit. It exposes a small number of REST endpoints which implement CRUD operations on a database containing publicly available data about volcanoes collated by the Smithsonian Institution's Global Volcanism Program. The API endpoints and their usage are described in detail below."
      },
      "components": {
        "securitySchemes": {
          "bearerAuth": {
            "type": "http",
            "scheme": "bearer",
            "description": "Enter JWT Bearer token **_only_**"
          }
        },
        "schemas": {
          "MissingCountryParameterVolcanoes": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "Country is a required query parameter."
              }
            }
          },
          "InvalidParametersVolcanoes": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "Invalid query parameters. Only country and populatedWithin are permitted."
              }
            }
          },
          "InvalidPopulatedWithinParameterVolcanoes": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "Invalid value for populatedWithin. Only: 5km,10km,30km,100km are permitted."
              }
            }
          },
          "InvalidParametersVolcano": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "Invalid query parameters. Query parameters are not permitted."
              }
            }
          },
          "MissingAuthHeader": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "Authorization header ('Bearer token') not found"
              }
            }
          },
          "TokenExpired": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "JWT token has expired"
              }
            }
          },
          "InvalidJWT": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "Invalid JWT token"
              }
            }
          },
          "MalformedAuthHeader": {
            "type": "object",
            "properties": {
              "error": {
                "type": "boolean",
                "example": "true"
              },
              "message": {
                "type": "string",
                "example": "Authorization header is malformed"
              }
            }
          }
        }
      },
      "paths": {
        "/countries": {
          "get": {
            "tags": [
              "Data"
            ],
            "description": "Returns a list of all countries that are associated with one or more volcanoes, ordered alphabetically.",
            "responses": {
              "200": {
                "description": "An array of countries. An example of the first five elements in the array is shown below.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Algeria",
                        "Antarctica",
                        "Argentina",
                        "Armenia",
                        "Australia"
                      ]
                    }
                  }
                }
              },
              "400": {
                "description": "Invalid query parameters.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid query parameters. Query parameters are not permitted."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/volcanoes": {
          "get": {
            "tags": [
              "Data"
            ],
            "description": "Returns a list of volcanoes that are associated with the queried country. The country query parameter is required. The list can optionally be filtered by using the populatedWithin query parameter. This will return a filtered list of volcanoes that have at least one person living within the provided radius.",
            "parameters": [
              {
                "name": "country",
                "in": "query",
                "description": "Name of country",
                "required": true,
                "schema": {
                  "type": "string"
                }
              },
              {
                "name": "populatedWithin",
                "in": "query",
                "description": "Distance within X km of a volcano",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "5km",
                    "10km",
                    "30km",
                    "100km"
                  ]
                }
              }
            ],
            "responses": {
              "200": {
                "description": "An array of objects containing id, name, country, region and subregion properties. An example of one object in the array is shown below.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": "1"
                          },
                          "name": {
                            "type": "string",
                            "example": "Abu"
                          },
                          "country": {
                            "type": "string",
                            "example": "Japan"
                          },
                          "region": {
                            "type": "string",
                            "example": "Japan, Taiwan, Marianas"
                          },
                          "subregion": {
                            "type": "string",
                            "example": "Honshu"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Missing country query parameter or query parameters invalid. Click on 'Schema' below to see the possible error responses.",
                "content": {
                  "application/json": {
                    "schema": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/MissingCountryParameterVolcanoes"
                        },
                        {
                          "$ref": "#/components/schemas/InvalidParametersVolcanoes"
                        },
                        {
                          "$ref": "#/components/schemas/InvalidPopulatedWithinParameterVolcanoes"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "/volcano/{id}": {
          "get": {
            "tags": [
              "Data"
            ],
            "description": "Returns an object containing data for the queried volcano. If a valid JWT token is sent in the header of the request, population data for 5km, 10km, 30km and 100km is also provided. To test this using Swagger, click the green 'Authorize' button at the top of this page to enter your JWT token. A JWT token can be obtained by logging in. The path parameter (id) is required.",
            "parameters": [
              {
                "name": "id",
                "in": "path",
                "description": "The ID of the volcano",
                "required": true,
                "schema": {
                  "type": "number"
                }
              }
            ],
            "security": [
              {
                "bearerAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Returns an object containing name, country, region, subregion, last eruption, summit, elevation, latitude and longitude data for the queried volcano. If a valid JWT token is sent in the header of the request, population data for 5km, 10km, 30km and 100km is also provided. An example of one object (with an authenticated request) is shown below.",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Abu"
                        },
                        "country": {
                          "type": "string",
                          "example": "Japan"
                        },
                        "region": {
                          "type": "string",
                          "example": "Japan, Taiwan, Marianas"
                        },
                        "subregion": {
                          "type": "string",
                          "example": "Honshu"
                        },
                        "last_eruption": {
                          "type": "string",
                          "example": "6850 BCE"
                        },
                        "summit": {
                          "type": "number",
                          "example": "641"
                        },
                        "elevation": {
                          "type": "number",
                          "example": "2103"
                        },
                        "latitude": {
                          "type": "string",
                          "example": "34.5000"
                        },
                        "longitude": {
                          "type": "string",
                          "example": "131.6000"
                        },
                        "population_5km": {
                          "type": "number",
                          "example": "3597"
                        },
                        "population_10km": {
                          "type": "number",
                          "example": "9594"
                        },
                        "population_30km": {
                          "type": "number",
                          "example": "117805"
                        },
                        "population_100km": {
                          "type": "number",
                          "example": "4071152"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Invalid parameters",
                "content": {
                  "application/json": {
                    "schema": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/InvalidParametersVolcano"
                        }
                      ]
                    }
                  }
                }
              },
              "401": {
                "description": "Unauthorized. Click on 'Schema' below to see the possible error responses.",
                "content": {
                  "application/json": {
                    "schema": {
                      "oneOf": [
                        {
                          "$ref": "#/components/schemas/InvalidJWT"
                        },
                        {
                          "$ref": "#/components/schemas/TokenExpired"
                        },
                        {
                          "$ref": "#/components/schemas/MalformedAuthHeader"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "/user/register": {
          "post": {
            "tags": [
              "Authentication"
            ],
            "description": "Creates a new user account. A request body containing the user to be registered must be sent.",
            "requestBody": {
              "description": "An object containing the email and password of the user to be registered.",
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "mike@gmail.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "password"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "201": {
                "description": "User successfully created",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "User created"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Bad request",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "message": {
                          "type": "string",
                          "example": "Request body incomplete, both email and password are required"
                        }
                      }
                    }
                  }
                }
              },
              "409": {
                "description": "User already exists",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "message": {
                          "type": "string",
                          "example": "User already exists"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "/user/login": {
          "post": {
            "description": "Log in to an existing user account. A request body containing the user credentials must be sent.",
            "tags": [
              "Authentication"
            ],
            "requestBody": {
              "description": "The credentials of the user to log in.",
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "example": "mike@gmail.com"
                      },
                      "password": {
                        "type": "string",
                        "example": "password"
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Log in successful",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "ajsonwebtoken"
                        },
                        "token_type": {
                          "type": "string",
                          "example": "Bearer"
                        },
                        "expires_in": {
                          "type": "number",
                          "example": 86400
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Invalid log in request",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "message": {
                          "type": "string",
                          "example": "Request body incomplete, both email and password are required"
                        }
                      }
                    }
                  }
                }
              },
              "401": {
                "description": "Log in failed",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "message": {
                          "type": "string",
                          "example": "Incorrect email or password"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }